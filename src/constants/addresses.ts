import { Networks } from "./blockchain";

const AVAX_MAINNET = {
    DAO_ADDRESS: "0x1904359446894C41733e963661D0c5C1B2Da7C58",
    MEMO_ADDRESS: "0xD9123558B69BA04d2bE14644f2350e6D59b463fa",
    TIME_ADDRESS: "0xa4c0B42a8160D29759f7E61B5fCC8BfbE0d09bcF",
    MIM_ADDRESS: "0xC8d48fCD0952d1822323e2144fe81c123668c472",
    STAKING_ADDRESS: "0x29c5d2685Fb8778aaBF622B0E4697211B5153c82",
    STAKING_HELPER_ADDRESS: "0x9367Fc0dDdA81c84B09DD411F551046122bB4127",
    TIME_BONDING_CALC_ADDRESS: "0x7230F3C814253797B7E6373d5faB2Eadb051E31b",
    TREASURY_ADDRESS: "0xb561611f8044853b0fD4d06383486159C591c5f7",
    ZAPIN_ADDRESS: "0x9ABE63C5A2fBcd54c8bAec3553d326356a530cae", //"0xb98007C04f475022bE681a890512518052CE6104",
    WMEMO_ADDRESS: "0x6B02db5497A3d611f64C243CC431A359847bb5f4",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.AVAX) return AVAX_MAINNET;

    throw Error("Network don't support");
};
